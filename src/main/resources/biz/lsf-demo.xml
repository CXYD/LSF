<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:lang="http://www.springframework.org/schema/lang"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd"
        default-autowire="byName">

    <description>
        LSF测试.由于很多bean在服务端与客户端都被使用到了,所以demo的例子放到一起.
    </description>

    <!-- provider  bean -->
    <bean id="hsfSpringProviderBean" class="zhenghui.lsf.util.HSFSpringProviderBean">
        <property name="serviceInterface" value="zhenghui.lsf.MessageService"/>
        <property name="target" ref="messageService"/>
    </bean>

    <bean id="processService" class="zhenghui.lsf.process.impl.ProcessComponent"/>

    <bean id="rpcProtocolService" class="zhenghui.lsf.rpc.tbremoting.TBRemotingRPCProtocolComponent"/>

    <bean id="providerServer" class="zhenghui.lsf.rpc.tbremoting.service.impl.NIOProviderServer"/>

    <bean id="processor" class="zhenghui.lsf.rpc.tbremoting.service.impl.ProviderProcessor"/>

    <bean id="dataStoreService" class="zhenghui.lsf.datastore.impl.ThreadNotSafeDataStoreComponent"/>

    <bean id="messageService" class="zhenghui.lsf.MessageServiceImpl"/>

     <!--consumer bean-->
    <bean id="messageServiceLSF" class="zhenghui.lsf.util.HSFSpringConsumerBean">
        <property name="interfaceName" value="zhenghui.lsf.MessageService"/>
        <property name="version" value="1.0.0"/>
    </bean>

    <bean id="addressService" class="zhenghui.lsf.route.impl.AddressComponent"/>

    <bean id="invokeService" class="zhenghui.lsf.rpc.tbremoting.service.impl.SyncInvokeComponent"/>

</beans>